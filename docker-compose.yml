version: '3.8'

services:
  db:
    image: postgres:15
    container_name: yellowai-db-1
    environment:
      POSTGRES_PASSWORD: secure_password_here
      POSTGRES_DB: chatbot_platform
      POSTGRES_USER: chatbot_user
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Optional: for external access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatbot_user -d chatbot_platform"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - yellowai-network

  backend:
    build: ./backend
    container_name: yellowai-backend-1
    ports:
      - "8000:8000"  # Optional: for direct access
    environment:
      - DATABASE_URL=postgresql://chatbot_user:secure_password_here@db:5432/chatbot_platform
      - SECRET_KEY=your-secret-key-change-in-production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - FRONTEND_URL=http://localhost
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend/uploads:/app/uploads
    restart: unless-stopped
    networks:
      - yellowai-network
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build: ./frontend
    container_name: yellowai-frontend-1
    restart: unless-stopped
    networks:
      - yellowai-network

  nginx:
    image: nginx:alpine
    container_name: yellowai-nginx-1
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - yellowai-network

volumes:
  postgres_data:

networks:
  yellowai-network:
    driver: bridge